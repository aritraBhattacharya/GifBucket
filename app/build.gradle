plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.aritra.gifbucket"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "API_KEY", API_KEY)
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    packagingOptions { // was added to resolve build error
        resources.excludes.add("META-INF/*")
        resources.excludes.add("META-INF/licenses/ASM")
        resources.excludes.add("win32-x86/*")
        resources.excludes.add("win32-x86-64/*")
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'

    //UI related
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.recyclerview:recyclerview:${rootProject.ext.recyclerviewVersion}"

    // navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.1'
    implementation 'androidx.test.ext:junit-ktx:1.1.3'

    // Data binding
    kapt 'com.android.databinding:compiler:3.1.4'

    // JSON parsing libraries
    implementation "com.google.code.gson:gson:${rootProject.ext.gsonVersion}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    implementation "com.squareup.retrofit2:converter-jackson:${rootProject.ext.retrofitJacksonConverterVersion}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofitGsonConverterVersion}"
    implementation "com.squareup.retrofit2:converter-scalars:${rootProject.ext.retrofitScalarsConverterVersion}"

    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:${rootProject.ext.rxjava2_adapter_version}"
    implementation "com.squareup.retrofit2:adapter-rxjava:${rootProject.ext.retrofitRxjavaAdapterVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.okHttpLoggingInterceptorVersion}"


    // Room persistence library
    implementation "androidx.room:room-runtime:${rootProject.ext.roomVersion}"
    implementation "androidx.room:room-ktx:${rootProject.ext.roomVersion}"
    kapt "androidx.room:room-compiler:${rootProject.ext.roomVersion}"

    // Room Encryption library

    //Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation "com.squareup.okhttp3:mockwebserver:${rootProject.ext.mockwebserverVersion}"
    //testImplementation "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testImplementation "androidx.test:core:${rootProject.ext.test_core_version}"
    testImplementation "com.google.truth:truth:${rootProject.ext.google_truth_version}"
    androidTestImplementation "com.google.truth:truth:${rootProject.ext.google_truth_version}"
    testImplementation "androidx.arch.core:core-testing:${rootProject.ext.androidx_arch_core_testing_version}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${rootProject.ext.coroutines_version_android}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${rootProject.ext.coroutines_version_android}"


    //mockito
    testImplementation "org.mockito:mockito-core:4.0.0"
    testImplementation "org.mockito:mockito-inline:4.0.0"
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"

    //dagger
    implementation "com.google.dagger:dagger:${rootProject.ext.daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${rootProject.ext.daggerVersion}"
    kapt "com.google.dagger:dagger-android-processor:${rootProject.ext.daggerVersion}"
    implementation "com.google.dagger:dagger-android:${rootProject.ext.dagger_android}"
    implementation "com.google.dagger:dagger-android-support:${rootProject.ext.daggerVersion}"

    // KTX lib for view model - just ViewModel
    implementation "androidx.lifecycle:lifecycle-runtime:${rootProject.ext.lifecycle_version}"
    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt "androidx.lifecycle:lifecycle-compiler:${rootProject.ext.lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${rootProject.ext.lifecycle_version}"
    // alternatively - just LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${rootProject.ext.lifecycle_version}"
    // lib for lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:${rootProject.ext.lifecycle_extensions_version}"

    // -- Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${rootProject.ext.coroutines_version_core}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${rootProject.ext.coroutines_version_android}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-debug:${rootProject.ext.coroutines_version_debug}"

    //glide
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.14.2'
    // WorkManager
    implementation('androidx.work:work-runtime-ktx:2.7.0-alpha03') {
        exclude group: 'org.jetbrains.kotlinx'
    }
}